module vga_controller(
input clk, // Clock input (25 MHz for 640x480@60Hz)
output reg hsync, // Horizontal sync signal
output reg vsync, // Vertical sync signal
output reg [3:0] r, // Red signal (4-bit)
output reg [3:0] g, // Green signal (4-bit)
output reg [3:0] b // Blue signal (4-bit)
);

// Timing constants for 640x480@60Hz
parameter H_DISPLAY = 640; // Horizontal display area
parameter H_FRONT = 16; // Horizontal front porch
parameter H_SYNC = 96; // Horizontal sync pulse
parameter H_BACK = 48; // Horizontal back porch

parameter H_TOTAL = H_DISPLAY + H_FRONT + H_SYNC + H_BACK;

parameter V_DISPLAY = 480; // Vertical display area
parameter V_FRONT = 10; // Vertical front porch
parameter V_SYNC = 2; // Vertical sync pulse
parameter V_BACK = 33; // Vertical back porch
parameter V_TOTAL = V_DISPLAY + V_FRONT + V_SYNC + V_BACK;

// Counters for horizontal and vertical sync
reg [9:0] h_count = 0;
reg [9:0] v_count = 0;
always @(posedge clk) begin
// Horizontal counter
if (h_count < H_TOTAL - 1)
h_count <= h_count + 1;
else begin
h_count <= 0;
// Vertical counter
if (v_count < V_TOTAL - 1)
v_count <= v_count + 1;
else
v_count <= 0;
end
end

// Generate HSYNC and VSYNC pulses
always @(posedge clk) begin
hsync <= (h_count >= H_DISPLAY + H_FRONT) && (h_count < H_DISPLAY +
H_FRONT + H_SYNC);
vsync <= (v_count >= V_DISPLAY + V_FRONT) && (v_count < V_DISPLAY +
V_FRONT + V_SYNC);
end

// Generate a simple checkerboard pattern

always @(posedge clk) begin
if (h_count < H_DISPLAY && v_count < V_DISPLAY) begin
// Checkerboard pattern for RGB
r <= (h_count[4] ^ v_count[4]) ? 4'hF : 4'h0;
g <= (h_count[4] ^ v_count[4]) ? 4'hF : 4'h0;
b <= (h_count[4] ^ v_count[4]) ? 4'hF : 4'h0;
end else begin
// Outside display area
r <= 4'h0;
g <= 4'h0;
b <= 4'h0;
end
end

endmodule
